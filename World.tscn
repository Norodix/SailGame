[gd_scene load_steps=68 format=2]

[ext_resource path="res://Art/wake_circle.png" type="Texture" id=1]
[ext_resource path="res://Player.gd" type="Script" id=2]
[ext_resource path="res://Sail.gd" type="Script" id=3]
[ext_resource path="res://Art/sails.png" type="Texture" id=4]
[ext_resource path="res://Art/BoatBody.png" type="Texture" id=5]
[ext_resource path="res://Art/Ocean/WaveMap.png" type="Texture" id=6]
[ext_resource path="res://World.gd" type="Script" id=7]
[ext_resource path="res://Wake.gd" type="Script" id=10]
[ext_resource path="res://WaterRidgedNormal.shader" type="Shader" id=11]
[ext_resource path="res://DebugOverlay.gd" type="Script" id=12]
[ext_resource path="res://Art/crate.png" type="Texture" id=13]
[ext_resource path="res://Rocking.shader" type="Shader" id=14]
[ext_resource path="res://CrateArea.gd" type="Script" id=15]
[ext_resource path="res://Art/arrow.svg" type="Texture" id=16]
[ext_resource path="res://Art/Coil.png" type="Texture" id=17]
[ext_resource path="res://Art/UnCoil.png" type="Texture" id=18]
[ext_resource path="res://theme.theme" type="Theme" id=19]
[ext_resource path="res://Art/Winds/Wind_ball.png" type="Texture" id=20]
[ext_resource path="res://Art/Compass.png" type="Texture" id=21]
[ext_resource path="res://Sounds/gronnie__wooden-box-breaking-sound-effects.wav" type="AudioStream" id=22]
[ext_resource path="res://Sounds/lydmakeren__boat-waves-2_trimmed.wav" type="AudioStream" id=23]
[ext_resource path="res://Sounds/mario1298__weak-wind_trimmed.wav" type="AudioStream" id=24]
[ext_resource path="res://Sounds/6polnic__hamp-rope-creaks.wav" type="AudioStream" id=25]
[ext_resource path="res://Art/reset.png" type="Texture" id=26]
[ext_resource path="res://Sounds/codefhd__saildeploy_trimmed.wav" type="AudioStream" id=27]
[ext_resource path="res://Art/Anchor.png" type="Texture" id=28]
[ext_resource path="res://Art/Wheel.png" type="Texture" id=29]
[ext_resource path="res://Art/Lantern.png" type="Texture" id=30]
[ext_resource path="res://Sounds/michael-grinnell__metallic-clunk.wav" type="AudioStream" id=31]
[ext_resource path="res://Sounds/cmusounddesign__jf-glass-breaking.wav" type="AudioStream" id=32]
[ext_resource path="res://Art/Sextant.png" type="Texture" id=33]
[ext_resource path="res://Sounds/littleluigi__1-metal-bang.wav" type="AudioStream" id=34]
[ext_resource path="res://WindContainer.gd" type="Script" id=36]
[ext_resource path="res://ShaderWind.gd" type="Script" id=37]
[ext_resource path="res://Art/Winds/Wind.shader" type="Shader" id=38]

[sub_resource type="CapsuleShape2D" id=1]
radius = 44.6475
height = 9.64355

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 31.8383, 6.46887 )

[sub_resource type="CanvasItemMaterial" id=3]
blend_mode = 1

[sub_resource type="Shader" id=4]
code = "shader_type particles;

uniform float scale;
uniform sampler2D scale_texture;

uniform sampler2D color_ramp;

void vertex() {
	if (RESTART) {
		CUSTOM.y = 0.0;
		TRANSFORM = EMISSION_TRANSFORM * TRANSFORM;
	} else {
		CUSTOM.y += DELTA / LIFETIME;
	}
	float tex_scale = textureLod(scale_texture, vec2(CUSTOM.y, 0.0), 0.0).r;
	float base_scale = tex_scale * scale;
	
	COLOR = textureLod(color_ramp, vec2(CUSTOM.y, 0.0), 0.0);
	TRANSFORM[0] = vec4(1.0, 0.0, 0.0, 0.0);
	TRANSFORM[1] = vec4(0.0, 1.0, 0.0, 0.0);
	TRANSFORM[2] = vec4(0.0, 0.0, 1.0, 0.0);
	if (base_scale < 0.000001) {
		base_scale = 0.000001;
	}
	TRANSFORM[0].xyz *= base_scale;
	TRANSFORM[1].xyz *= base_scale;
	TRANSFORM[2].xyz *= base_scale;
	VELOCITY.z = 0.0;
	TRANSFORM[3].z = 0.0;
}

"

[sub_resource type="Gradient" id=5]
colors = PoolColorArray( 1, 1, 1, 0.784314, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="Curve" id=7]
max_value = 2.0
_data = [ Vector2( 0, 0.313636 ), 0.0, 1.16054, 0, 0, Vector2( 1, 2 ), 0.697455, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=8]
curve = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 4 )
shader_param/scale = 0.5
shader_param/scale_texture = SubResource( 8 )
shader_param/color_ramp = SubResource( 6 )

[sub_resource type="ParticlesMaterial" id=10]
flag_disable_z = true
direction = Vector3( 1, 1, 0 )
spread = 0.0
gravity = Vector3( 0, 0, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
angle = -90.0
scale = 0.5
scale_curve = SubResource( 8 )
color_ramp = SubResource( 6 )

[sub_resource type="Shader" id=11]
code = "shader_type particles;
uniform vec3 direction;
uniform float spread;
uniform float flatness;
uniform float initial_linear_velocity;
uniform float initial_angle;
uniform float angular_velocity;
uniform float orbit_velocity;
uniform float linear_accel;
uniform float radial_accel;
uniform float tangent_accel;
uniform float damping;
uniform float scale;
uniform float hue_variation;
uniform float anim_speed;
uniform float anim_offset;
uniform float initial_linear_velocity_random;
uniform float initial_angle_random;
uniform float angular_velocity_random;
uniform float orbit_velocity_random;
uniform float linear_accel_random;
uniform float radial_accel_random;
uniform float tangent_accel_random;
uniform float damping_random;
uniform float scale_random;
uniform float hue_variation_random;
uniform float anim_speed_random;
uniform float anim_offset_random;
uniform float lifetime_randomness;
uniform vec4 color_value : hint_color;
uniform int trail_divisor;
uniform vec3 gravity;
uniform sampler2D color_ramp;
uniform sampler2D scale_texture;


float rand_from_seed(inout uint seed) {
	int k;
	int s = int(seed);
	if (s == 0)
	s = 305420679;
	k = s / 127773;
	s = 16807 * (s - k * 127773) - 2836 * k;
	if (s < 0)
		s += 2147483647;
	seed = uint(s);
	return float(seed % uint(65536)) / 65535.0;
}

float rand_from_seed_m1_p1(inout uint seed) {
	return rand_from_seed(seed) * 2.0 - 1.0;
}

uint hash(uint x) {
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = (x >> uint(16)) ^ x;
	return x;
}

void vertex() {
	uint base_number = NUMBER / uint(trail_divisor);
	uint alt_seed = hash(base_number + uint(1) + RANDOM_SEED);
	float angle_rand = rand_from_seed(alt_seed);
	float scale_rand = rand_from_seed(alt_seed);
	float hue_rot_rand = rand_from_seed(alt_seed);
	float anim_offset_rand = rand_from_seed(alt_seed);
	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;

	bool restart = false;
	if (CUSTOM.y > CUSTOM.w) {
		restart = true;
	}

	if (RESTART || restart) {
		float tex_linear_velocity = 0.0;
		float tex_angle = 0.0;
		float tex_anim_offset = 0.0;
		float spread_rad = spread * degree_to_rad;
		float angle1_rad = atan(direction.y, direction.x) + rand_from_seed_m1_p1(alt_seed) * spread_rad;
		vec3 rot = vec3(cos(angle1_rad), sin(angle1_rad), 0.0);
		VELOCITY = rot * initial_linear_velocity * mix(1.0, rand_from_seed(alt_seed), initial_linear_velocity_random);
		float base_angle = (initial_angle + tex_angle) * mix(1.0, angle_rand, initial_angle_random);
		CUSTOM.x = base_angle * degree_to_rad;
		CUSTOM.y = 0.0;
		CUSTOM.w = (1.0 - lifetime_randomness * rand_from_seed(alt_seed));
		CUSTOM.z = (anim_offset + tex_anim_offset) * mix(1.0, anim_offset_rand, anim_offset_random);
		VELOCITY = (EMISSION_TRANSFORM * vec4(VELOCITY, 0.0)).xyz;
		TRANSFORM = EMISSION_TRANSFORM * TRANSFORM;
		VELOCITY.z = 0.0;
		TRANSFORM[3].z = 0.0;
	} else {
		CUSTOM.y += DELTA / LIFETIME;
		float tex_linear_velocity = 0.0;
		float tex_orbit_velocity = 0.0;
		float tex_angular_velocity = 0.0;
		float tex_linear_accel = 0.0;
		float tex_radial_accel = 0.0;
		float tex_tangent_accel = 0.0;
		float tex_damping = 0.0;
		float tex_angle = 0.0;
		float tex_anim_speed = 0.0;
		float tex_anim_offset = 0.0;
		vec3 force = gravity;
		vec3 pos = TRANSFORM[3].xyz;
		pos.z = 0.0;
		// apply linear acceleration
		force += length(VELOCITY) > 0.0 ? normalize(VELOCITY) * (linear_accel + tex_linear_accel) * mix(1.0, rand_from_seed(alt_seed), linear_accel_random) : vec3(0.0);
		// apply radial acceleration
		vec3 org = EMISSION_TRANSFORM[3].xyz;
		vec3 diff = pos - org;
		force += length(diff) > 0.0 ? normalize(diff) * (radial_accel + tex_radial_accel) * mix(1.0, rand_from_seed(alt_seed), radial_accel_random) : vec3(0.0);
		// apply tangential acceleration;
		force += length(diff.yx) > 0.0 ? vec3(normalize(diff.yx * vec2(-1.0, 1.0)), 0.0) * ((tangent_accel + tex_tangent_accel) * mix(1.0, rand_from_seed(alt_seed), tangent_accel_random)) : vec3(0.0);
		// apply attractor forces
		VELOCITY += force * DELTA;
		// orbit velocity
		float orbit_amount = (orbit_velocity + tex_orbit_velocity) * mix(1.0, rand_from_seed(alt_seed), orbit_velocity_random);
		if (orbit_amount != 0.0) {
		     float ang = orbit_amount * DELTA * pi * 2.0;
		     mat2 rot = mat2(vec2(cos(ang), -sin(ang)), vec2(sin(ang), cos(ang)));
		     TRANSFORM[3].xy -= diff.xy;
		     TRANSFORM[3].xy += rot * diff.xy;
		}
		if (damping + tex_damping > 0.0) {
			float v = length(VELOCITY);
			float damp = (damping + tex_damping) * mix(1.0, rand_from_seed(alt_seed), damping_random);
			v -= damp * DELTA;
			if (v < 0.0) {
				VELOCITY = vec3(0.0);
			} else {
				VELOCITY = normalize(VELOCITY) * v;
			}
		}
		float base_angle = (initial_angle + tex_angle) * mix(1.0, angle_rand, initial_angle_random);
		base_angle += CUSTOM.y * LIFETIME * (angular_velocity + tex_angular_velocity) * mix(1.0, rand_from_seed(alt_seed) * 2.0 - 1.0, angular_velocity_random);
		CUSTOM.x = base_angle * degree_to_rad;
		CUSTOM.z = (anim_offset + tex_anim_offset) * mix(1.0, anim_offset_rand, anim_offset_random) + CUSTOM.y * (anim_speed + tex_anim_speed) * mix(1.0, rand_from_seed(alt_seed), anim_speed_random);
	}
	float tex_scale = textureLod(scale_texture, vec2(CUSTOM.y, 0.0), 0.0).r;
	float tex_hue_variation = 0.0;
	float hue_rot_angle = (hue_variation + tex_hue_variation) * pi * 2.0 * mix(1.0, hue_rot_rand * 2.0 - 1.0, hue_variation_random);
	float hue_rot_c = cos(hue_rot_angle);
	float hue_rot_s = sin(hue_rot_angle);
	mat4 hue_rot_mat = mat4(vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.000, 0.000, 0.000, 1.0)) +
		mat4(vec4(0.701, -0.587, -0.114, 0.0),
			vec4(-0.299, 0.413, -0.114, 0.0),
			vec4(-0.300, -0.588, 0.886, 0.0),
			vec4(0.000, 0.000, 0.000, 0.0)) * hue_rot_c +
		mat4(vec4(0.168, 0.330, -0.497, 0.0),
			vec4(-0.328, 0.035,  0.292, 0.0),
			vec4(1.250, -1.050, -0.203, 0.0),
			vec4(0.000, 0.000, 0.000, 0.0)) * hue_rot_s;
	COLOR = hue_rot_mat * textureLod(color_ramp, vec2(CUSTOM.y, 0.0), 0.0);

	TRANSFORM[0] = vec4(cos(CUSTOM.x), -sin(CUSTOM.x), 0.0, 0.0);
	TRANSFORM[1] = vec4(sin(CUSTOM.x), cos(CUSTOM.x), 0.0, 0.0);
	TRANSFORM[2] = vec4(0.0, 0.0, 1.0, 0.0);
	float base_scale = tex_scale * mix(scale, 1.0, scale_random * scale_rand);
	if (base_scale < 0.000001) {
		base_scale = 0.000001;
	}
	TRANSFORM[0].xyz *= base_scale;
	TRANSFORM[1].xyz *= base_scale;
	TRANSFORM[2].xyz *= base_scale;
	VELOCITY.z = 0.0;
	TRANSFORM[3].z = 0.0;
	if (CUSTOM.y > CUSTOM.w) {		ACTIVE = false;
	}
}

"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/direction = Vector3( 1, 1, 0 )
shader_param/spread = 0.0
shader_param/flatness = 0.0
shader_param/initial_linear_velocity = 0.0
shader_param/initial_angle = -90.0
shader_param/angular_velocity = 0.0
shader_param/orbit_velocity = 0.0
shader_param/linear_accel = 0.0
shader_param/radial_accel = 0.0
shader_param/tangent_accel = 0.0
shader_param/damping = 0.0
shader_param/scale = 0.5
shader_param/hue_variation = 0.0
shader_param/anim_speed = 0.0
shader_param/anim_offset = 0.0
shader_param/initial_linear_velocity_random = 0.0
shader_param/initial_angle_random = 0.0
shader_param/angular_velocity_random = 0.0
shader_param/orbit_velocity_random = 0.0
shader_param/linear_accel_random = 0.0
shader_param/radial_accel_random = 0.0
shader_param/tangent_accel_random = 0.0
shader_param/damping_random = 0.0
shader_param/scale_random = 0.0
shader_param/hue_variation_random = 0.0
shader_param/anim_speed_random = 0.0
shader_param/anim_offset_random = 0.0
shader_param/lifetime_randomness = 0.0
shader_param/color_value = Color( 1, 1, 1, 1 )
shader_param/trail_divisor = 1
shader_param/gravity = Vector3( 0, -1e-06, 0 )
shader_param/color_ramp = SubResource( 6 )
shader_param/scale_texture = SubResource( 8 )

[sub_resource type="ShaderMaterial" id=13]
shader = ExtResource( 11 )
shader_param/speed = 0.05
shader_param/strength = 0.5
shader_param/tint = Color( 0.07, 0.5195, 1, 1 )
shader_param/wavemap = ExtResource( 6 )

[sub_resource type="ImageTexture" id=14]
size = Vector2( 1280, 1280 )

[sub_resource type="Shader" id=15]
code = "shader_type canvas_item;
uniform sampler2D sprite;

void fragment(){
	COLOR.a = texture(TEXTURE, UV).x;
	COLOR.rgb = vec3(1.0);
}"

[sub_resource type="ImageTexture" id=16]

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 15 )
shader_param/sprite = SubResource( 16 )

[sub_resource type="ImageTexture" id=18]
flags = 0
flags = 0
size = Vector2( 1300, 1300 )

[sub_resource type="Curve" id=19]
max_value = 10.0
_data = [ Vector2( 0, 0 ), 0.0, 0.0, 0, 0, Vector2( 0.863248, 0.409091 ), 3.35885, 3.35885, 0, 0, Vector2( 1, 6.81818 ), 121.559, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=20]
curve = SubResource( 19 )

[sub_resource type="OpenSimplexNoise" id=21]
seed = 3
octaves = 1
period = 120.0

[sub_resource type="NoiseTexture" id=22]
seamless = true
noise = SubResource( 21 )

[sub_resource type="ShaderMaterial" id=23]
shader = ExtResource( 38 )
shader_param/overallVelocity = Vector3( 150, 150, 0 )
shader_param/spawnDistance = 640.0
shader_param/spawnOrigin = Vector2( 640, 640 )
shader_param/screenSize = 1280.0
shader_param/wrapOffset = 20.0
shader_param/scale = 0.4
shader_param/scale_random = 0.2
shader_param/map = SubResource( 22 )
shader_param/angleOverLifetime = SubResource( 20 )

[sub_resource type="Animation" id=24]
step = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath("CrateCounter/Control/Node2D:position")
tracks/0/interp = 0
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25, 0.75, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 20 ), Vector2( 0, 0 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CrateCounter/Control/Node2D:rotation_degrees")
tracks/1/interp = 0
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 15.0, -15.0, 15.0, -15.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("CrateCounter/Control/Node2D:scale")
tracks/2/interp = 0
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.25, 0.75, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.3, 1.3 ), Vector2( 1.3, 1.3 ), Vector2( 1, 1 ) ]
}

[sub_resource type="CircleShape2D" id=25]
radius = 18.0

[sub_resource type="ShaderMaterial" id=26]
shader = ExtResource( 14 )
shader_param/speed = 6.0
shader_param/amplitude = 0.2
shader_param/vertical = 0.3

[sub_resource type="SpriteFrames" id=27]
animations = [ {
"frames": [ ExtResource( 13 ), ExtResource( 29 ), ExtResource( 28 ), ExtResource( 30 ), ExtResource( 21 ), ExtResource( 33 ) ],
"loop": true,
"name": "default",
"speed": 3.0
} ]

[sub_resource type="Theme" id=28]

[sub_resource type="CircleShape2D" id=29]
radius = 100.0

[sub_resource type="CapsuleShape2D" id=30]
radius = 36.0
height = 10.0

[sub_resource type="CapsuleShape2D" id=31]
radius = 38.0
height = 38.0

[sub_resource type="RectangleShape2D" id=32]
extents = Vector2( 1000, 600 )

[node name="World" type="Node2D"]
position = Vector2( 450.319, 237.071 )
script = ExtResource( 7 )

[node name="PlayerBoat" type="RigidBody2D" parent="."]
mass = 20.0
can_sleep = false
linear_damp = 0.4
angular_damp = 20.0
script = ExtResource( 2 )

[node name="BoatBody" type="Sprite" parent="PlayerBoat"]
position = Vector2( -20, 0 )
rotation = 1.5708
scale = Vector2( 0.262, 0.262 )
texture = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="PlayerBoat"]
visible = false
position = Vector2( -22, 0 )
scale = Vector2( 1, 0.3 )
shape = SubResource( 1 )

[node name="PinJoint2D" type="PinJoint2D" parent="PlayerBoat"]
node_a = NodePath("../Sail")
node_b = NodePath("..")
bias = 0.9

[node name="Sail" type="RigidBody2D" parent="PlayerBoat"]
position = Vector2( -32, 0 )
gravity_scale = 0.0
can_sleep = false
linear_damp = 0.5
angular_damp = 0.02
script = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="PlayerBoat/Sail"]
visible = false
rotation = 3.14159
shape = SubResource( 2 )

[node name="Sail" type="Sprite" parent="PlayerBoat/Sail"]
position = Vector2( 2.35, 0 )
rotation = 1.57079
scale = Vector2( 0.118017, 0.118017 )
texture = ExtResource( 4 )
hframes = 3
frame = 2

[node name="RopeCreak" type="AudioStreamPlayer" parent="PlayerBoat/Sail"]
stream = ExtResource( 25 )
volume_db = -15.0
autoplay = true
stream_paused = true

[node name="SailDeploy" type="AudioStreamPlayer" parent="PlayerBoat/Sail"]
stream = ExtResource( 27 )
volume_db = -16.227

[node name="Camera2D" type="Camera2D" parent="PlayerBoat"]
current = true
smoothing_enabled = true
smoothing_speed = 2.0

[node name="Wake" type="Particles2D" parent="PlayerBoat"]
modulate = Color( 0.4, 0.4, 0.4, 1 )
material = SubResource( 3 )
z_index = -1
amount = 30
local_coords = false
process_material = SubResource( 9 )
texture = ExtResource( 1 )
script = ExtResource( 10 )

[node name="Wake_old" type="Particles2D" parent="PlayerBoat"]
visible = false
modulate = Color( 0.4, 0.4, 0.4, 1 )
material = SubResource( 3 )
z_index = -1
emitting = false
amount = 30
local_coords = false
process_material = SubResource( 10 )
texture = ExtResource( 1 )
script = ExtResource( 10 )

[node name="Wake_old2" type="Particles2D" parent="PlayerBoat"]
visible = false
modulate = Color( 0.4, 0.4, 0.4, 1 )
material = SubResource( 3 )
z_index = -1
emitting = false
amount = 30
local_coords = false
process_material = SubResource( 12 )
texture = ExtResource( 1 )
script = ExtResource( 10 )

[node name="Wind" type="AudioStreamPlayer" parent="PlayerBoat"]
stream = ExtResource( 24 )
volume_db = -16.0
autoplay = true

[node name="Waves" type="AudioStreamPlayer" parent="PlayerBoat"]
stream = ExtResource( 23 )
volume_db = -42.043
autoplay = true

[node name="ParallaxBackground_Ocean" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer_Ocean" type="ParallaxLayer" parent="ParallaxBackground_Ocean"]
position = Vector2( -10.4, 0 )
motion_mirroring = Vector2( 1280, 1280 )

[node name="ShaderOcean" type="Sprite" parent="ParallaxBackground_Ocean/ParallaxLayer_Ocean"]
material = SubResource( 13 )
texture = SubResource( 14 )
centered = false
__meta__ = {
"_edit_lock_": true
}

[node name="ParallaxBackground_Wind" type="ParallaxBackground" parent="."]
layer = 2

[node name="ParallaxLayer_Wind" type="ParallaxLayer" parent="ParallaxBackground_Wind"]
z_index = 1000
motion_mirroring = Vector2( 1280, 1280 )

[node name="WindContainer" type="ViewportContainer" parent="ParallaxBackground_Wind/ParallaxLayer_Wind"]
material = SubResource( 17 )
margin_right = 2580.0
margin_bottom = 2580.0
script = ExtResource( 36 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="WindViewport" type="Viewport" parent="ParallaxBackground_Wind/ParallaxLayer_Wind/WindContainer"]
size = Vector2( 1300, 1300 )
transparent_bg = true
handle_input_locally = false
render_target_clear_mode = 2
render_target_update_mode = 3
gui_disable_input = true

[node name="Blending" type="Sprite" parent="ParallaxBackground_Wind/ParallaxLayer_Wind/WindContainer/WindViewport"]
process_priority = 2
modulate = Color( 1, 1, 1, 0.0313726 )
texture = SubResource( 18 )
centered = false

[node name="ShaderWind" type="Particles2D" parent="ParallaxBackground_Wind/ParallaxLayer_Wind/WindContainer/WindViewport"]
modulate = Color( 1, 1, 1, 0.196078 )
position = Vector2( -49.681, -162.929 )
rotation = -0.785398
amount = 30
lifetime = 5.0
preprocess = 50.0
randomness = 1.0
visibility_rect = Rect2( 0, 0, 2570, 2570 )
local_coords = false
process_material = SubResource( 23 )
texture = ExtResource( 20 )
script = ExtResource( 37 )

[node name="GUI" type="CanvasLayer" parent="."]

[node name="Control" type="Control" parent="GUI"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 16.0
theme = ExtResource( 19 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="WindSpeed" type="Label" parent="GUI/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_bottom = -36.0
text = "WindSpeed: "
valign = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BoatSpeed" type="Label" parent="GUI/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_bottom = -10.0
text = "Boat Speed: "
valign = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CrateCounter" type="AnimationPlayer" parent="GUI"]
playback_speed = 3.0
anims/SizeBump = SubResource( 24 )

[node name="Control" type="Control" parent="GUI/CrateCounter"]
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 0.306
margin_left = -50.0
margin_top = 35.0
margin_right = -75.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Node2D" type="Node2D" parent="GUI/CrateCounter/Control"]

[node name="Label" type="Label" parent="GUI/CrateCounter/Control/Node2D"]
margin_right = 25.0
margin_bottom = 19.0
theme = ExtResource( 19 )
text = "x 0"
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="GUI/CrateCounter/Control/Node2D"]
position = Vector2( -30, 10.201 )
scale = Vector2( 0.2, 0.2 )
texture = ExtResource( 13 )

[node name="DebugOverlay" type="CanvasLayer" parent="."]
script = ExtResource( 12 )

[node name="Control" type="Control" parent="DebugOverlay"]
visible = false
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="DebugOverlay/Control"]
margin_left = 16.0
margin_top = 16.0
margin_right = 56.0
margin_bottom = 30.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CrateArea" type="Area2D" parent="."]
position = Vector2( 785.388, 0 )
script = ExtResource( 15 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="CrateArea"]
shape = SubResource( 25 )
one_way_collision_margin = 0.0

[node name="Break_wood" type="AudioStreamPlayer" parent="CrateArea"]
stream = ExtResource( 22 )
volume_db = -15.0
pitch_scale = 2.0

[node name="Break_glass" type="AudioStreamPlayer" parent="CrateArea"]
stream = ExtResource( 32 )
volume_db = -12.0

[node name="Break_metal" type="AudioStreamPlayer" parent="CrateArea"]
stream = ExtResource( 31 )
volume_db = -8.0
pitch_scale = 2.0

[node name="Break_copper" type="AudioStreamPlayer" parent="CrateArea"]
stream = ExtResource( 34 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="CrateArea"]
material = SubResource( 26 )
scale = Vector2( 0.16, 0.16 )
frames = SubResource( 27 )
frame = 5

[node name="TouchControls" type="CanvasLayer" parent="."]

[node name="TouchControlsVisibilityNode" type="Control" parent="TouchControls"]
anchor_right = 1.0
anchor_bottom = 1.0
theme = SubResource( 28 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RestButton" type="TouchScreenButton" parent="TouchControls/TouchControlsVisibilityNode"]
position = Vector2( 16, 16 )
scale = Vector2( 0.237091, 0.237091 )
normal = ExtResource( 26 )
pressed = ExtResource( 26 )
shape = SubResource( 29 )
action = "Reset"
visibility_mode = 1

[node name="Sprite" type="Sprite" parent="TouchControls/TouchControlsVisibilityNode/RestButton"]
visible = false
scale = Vector2( 0.4, 0.4 )
flip_v = true

[node name="Control" type="Control" parent="TouchControls/TouchControlsVisibilityNode"]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -287.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TightenButton" type="TouchScreenButton" parent="TouchControls/TouchControlsVisibilityNode/Control"]
position = Vector2( 16, 0 )
normal = ExtResource( 17 )
pressed = ExtResource( 17 )
shape = SubResource( 30 )
action = "tighten"
visibility_mode = 1

[node name="Sprite" type="Sprite" parent="TouchControls/TouchControlsVisibilityNode/Control/TightenButton"]
visible = false
position = Vector2( 0, 3 )
scale = Vector2( 0.4, 0.4 )
texture = ExtResource( 16 )

[node name="LoosenButton" type="TouchScreenButton" parent="TouchControls/TouchControlsVisibilityNode/Control"]
position = Vector2( 16, 100 )
normal = ExtResource( 18 )
pressed = ExtResource( 18 )
shape = SubResource( 31 )
action = "loosen"
visibility_mode = 1

[node name="Sprite" type="Sprite" parent="TouchControls/TouchControlsVisibilityNode/Control/LoosenButton"]
visible = false
scale = Vector2( 0.4, 0.4 )
texture = ExtResource( 16 )
flip_v = true

[node name="Steer" type="TouchScreenButton" parent="TouchControls/TouchControlsVisibilityNode"]
position = Vector2( 100, 0 )
z_index = -1
shape = SubResource( 32 )
shape_visible = false
action = "MouseSteer"
[connection signal="body_entered" from="CrateArea" to="CrateArea" method="_on_CrateArea_body_entered"]
[connection signal="pickUp" from="CrateArea" to="." method="_on_CrateArea_pickUp"]
